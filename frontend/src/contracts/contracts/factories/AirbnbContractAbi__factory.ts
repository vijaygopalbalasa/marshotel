/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.73.0
  Forc version: 0.49.2
  Fuel-Core version: 0.22.0
*/

import { Interface, Contract, ContractFactory } from "fuels";
import type { Provider, Account, AbstractAddress, BytesLike, DeployContractOptions, StorageSlot } from "fuels";
import type { AirbnbContractAbi, AirbnbContractAbiInterface } from "../AirbnbContractAbi";

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "enum BookingError",
      "components": [
        {
          "name": "PropertyBooked",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "BookingNotFound",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "PropertyNotAvailable",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "PropertyNotFound",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "enum BookingState",
      "components": [
        {
          "name": "Available",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Booked",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Cancelled",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "enum CreationError",
      "components": [
        {
          "name": "BookingDateMustBeInFuture",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 5,
      "type": "enum Identity",
      "components": [
        {
          "name": "Address",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "ContractId",
          "type": 13,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 6,
      "type": "enum Option",
      "components": [
        {
          "name": "None",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Some",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        9
      ]
    },
    {
      "typeId": 7,
      "type": "enum PropertyState",
      "components": [
        {
          "name": "Listed",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Unlisted",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 8,
      "type": "enum UserError",
      "components": [
        {
          "name": "InvalidID",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "UnauthorizedUser",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "PropertyNotAvailable",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 9,
      "type": "generic T",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 10,
      "type": "struct Address",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 11,
      "type": "struct BookingInfo",
      "components": [
        {
          "name": "bookedBy",
          "type": 5,
          "typeArguments": null
        },
        {
          "name": "bookingFrom",
          "type": 18,
          "typeArguments": null
        },
        {
          "name": "bookingTo",
          "type": 18,
          "typeArguments": null
        },
        {
          "name": "status",
          "type": 3,
          "typeArguments": null
        },
        {
          "name": "property_id",
          "type": 18,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 12,
      "type": "struct BookingSuccessful",
      "components": [
        {
          "name": "booking_id",
          "type": 18,
          "typeArguments": null
        },
        {
          "name": "bookedBy",
          "type": 5,
          "typeArguments": null
        },
        {
          "name": "bookingFrom",
          "type": 18,
          "typeArguments": null
        },
        {
          "name": "bookingTo",
          "type": 18,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 13,
      "type": "struct ContractId",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 14,
      "type": "struct PropertyImage",
      "components": [
        {
          "name": "image1",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "image2",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 15,
      "type": "struct PropertyInfo",
      "components": [
        {
          "name": "owner",
          "type": 5,
          "typeArguments": null
        },
        {
          "name": "pincode",
          "type": 18,
          "typeArguments": null
        },
        {
          "name": "listed",
          "type": 7,
          "typeArguments": null
        },
        {
          "name": "available",
          "type": 3,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 16,
      "type": "struct PropertyListed",
      "components": [
        {
          "name": "owner",
          "type": 5,
          "typeArguments": null
        },
        {
          "name": "property_info",
          "type": 15,
          "typeArguments": null
        },
        {
          "name": "property_id",
          "type": 18,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 17,
      "type": "struct PropertyUnlisted",
      "components": [
        {
          "name": "property_id",
          "type": 18,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 18,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "property_id",
          "type": 18,
          "typeArguments": null
        },
        {
          "name": "bookingFrom",
          "type": 18,
          "typeArguments": null
        },
        {
          "name": "bookingTo",
          "type": 18,
          "typeArguments": null
        }
      ],
      "name": "book",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "pincode",
          "type": 18,
          "typeArguments": null
        },
        {
          "name": "image1",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "image2",
          "type": 1,
          "typeArguments": null
        }
      ],
      "name": "list_property",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "property_id",
          "type": 18,
          "typeArguments": null
        }
      ],
      "name": "unlist_property",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "booking_id",
          "type": 18,
          "typeArguments": null
        }
      ],
      "name": "booking_info",
      "output": {
        "name": "",
        "type": 6,
        "typeArguments": [
          {
            "name": "",
            "type": 11,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "property_id",
          "type": 18,
          "typeArguments": null
        }
      ],
      "name": "get_property_images",
      "output": {
        "name": "",
        "type": 6,
        "typeArguments": [
          {
            "name": "",
            "type": 14,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "property_id",
          "type": 18,
          "typeArguments": null
        }
      ],
      "name": "property_info",
      "output": {
        "name": "",
        "type": 6,
        "typeArguments": [
          {
            "name": "",
            "type": 15,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "total_booking",
      "output": {
        "name": "",
        "type": 18,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "total_property_listed",
      "output": {
        "name": "",
        "type": 18,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": 0,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 1,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 2,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": []
      }
    },
    {
      "logId": 3,
      "loggedType": {
        "name": "",
        "type": 8,
        "typeArguments": []
      }
    },
    {
      "logId": 4,
      "loggedType": {
        "name": "",
        "type": 12,
        "typeArguments": []
      }
    },
    {
      "logId": 5,
      "loggedType": {
        "name": "",
        "type": 16,
        "typeArguments": []
      }
    },
    {
      "logId": 6,
      "loggedType": {
        "name": "",
        "type": 8,
        "typeArguments": []
      }
    },
    {
      "logId": 7,
      "loggedType": {
        "name": "",
        "type": 17,
        "typeArguments": []
      }
    }
  ],
  "messagesTypes": [],
  "configurables": []
};

const _storageSlots: StorageSlot[] = [
  {
    "key": "7f91d1a929dce734e7f930bbb279ccfccdb5474227502ea8845815c74bd930a7",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "94b2b70d20da552763c7614981b2a4d984380d7ed4e54c01b28c914e79e44bd5",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class AirbnbContractAbi__factory {
  static readonly abi = _abi;

  static readonly storageSlots = _storageSlots;

  static createInterface(): AirbnbContractAbiInterface {
    return new Interface(_abi) as unknown as AirbnbContractAbiInterface
  }

  static connect(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider
  ): AirbnbContractAbi {
    return new Contract(id, _abi, accountOrProvider) as unknown as AirbnbContractAbi
  }

  static async deployContract(
    bytecode: BytesLike,
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<AirbnbContractAbi> {
    const factory = new ContractFactory(bytecode, _abi, wallet);

    const { storageSlots } = AirbnbContractAbi__factory;

    const contract = await factory.deployContract({
      storageSlots,
      ...options,
    });

    return contract as unknown as AirbnbContractAbi;
  }
}
